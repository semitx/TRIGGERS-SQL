Trigger exercises using Sakila and my own databases

use sakila;

1. Actualizar last_update de customer cuando se actualice su dirección
    Crea un trigger que actualice el campo last_update de la tabla customer cuando se modifique su address_id.

DELIMITER $$

CREATE TRIGGER actualizar_last_update_address
BEFORE UPDATE ON customer
FOR EACH ROW
BEGIN
    IF OLD.address_id <> NEW.address_id THEN
        SET NEW.last_update = NOW();
    END IF;
END$$

DELIMITER ;

2. Actualizar last_update de rental al insertar un payment
    Cuando se inserte un pago, actualiza el campo last_update del rental asociado.

DELIMITER $$

CREATE TRIGGER actualizar_last_update_rental
AFTER INSERT ON payment
FOR EACH ROW
BEGIN
    UPDATE rental
    SET last_update = NOW()
    WHERE rental_id = NEW.rental_id;
END$$

DELIMITER ;

3. Actualizar last_update de la tabla inventory al actualizar film_id
    Cuando se actualice el film_id de un inventario, actualiza su campo last_update.

DELIMITER $$

CREATE TRIGGER actualizar_last_update_inventory
BEFORE UPDATE ON inventory
FOR EACH ROW
BEGIN
    IF OLD.film_id <> NEW.film_id THEN
        SET NEW.last_update = NOW();
    END IF;
END$$

DELIMITER ;

4. Actualizar last_update de la tabla staff cuando se modifique su nombre
    Cuando se actualice el first_name o last_name de un empleado (staff), también debe actualizarse el campo last_update.

DELIMITER $$

CREATE TRIGGER actualizar_last_update_staff
BEFORE UPDATE ON staff
FOR EACH ROW
BEGIN
    IF OLD.first_name <> NEW.first_name OR OLD.last_name <> NEW.last_name THEN
        SET NEW.last_update = NOW();
    END IF;
END$$

DELIMITER ;

----------------use videojuego;

-Cuando se modifique la edad o el correo, en estadísticas se va a poner la fecha en
que fue modificado

DELIMITER $$

CREATE TRIGGER actualizar_estadisticas_jugador
BEFORE UPDATE ON jugadores
FOR EACH ROW
BEGIN
    IF OLD.Edad <> NEW.Edad OR OLD.CorreoElectronico <> NEW.CorreoElectronico THEN
        SET NEW.Estadisticas = CONCAT('Actualizado el ', NOW());
    END IF;
END$$

DELIMITER ;


----------------use escuela;

-Cuando se actualice el teléfono o el correo electrónico, se pone la fecha de
modificación en Ultima actualización

DELIMITER $$

CREATE TRIGGER actualizar_fecha_estudiante
BEFORE UPDATE ON estudiante
FOR EACH ROW
BEGIN
    IF OLD.Telefono <> NEW.Telefono OR OLD.CorreoElectronico <> NEW.CorreoElectronico THEN
        SET NEW.UltimaActualizacion = NOW();
    END IF;
END$$

DELIMITER ;


----------------use ligafutbol;

-Si el sueldo que se pone es menor a 5000, lo corrige automáticamente a el valor
mínimo.
DELIMITER $$

CREATE TRIGGER validar_sueldo_jugador
BEFORE INSERT ON jugadores
FOR EACH ROW
BEGIN
    IF NEW.Sueldo < 5000.00 THEN
        SET NEW.Sueldo = 5000.00;
    END IF;
END$$

DELIMITER ;

----------------use tienda;

-Si se le quiere insertar saldo negativo a un cliente lanza un mensaje de error
DELIMITER $$

CREATE TRIGGER evitar_saldo_negativo_insert
BEFORE INSERT ON clientes
FOR EACH ROW
BEGIN
    IF NEW.Saldo < 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'No se permite insertar un cliente con saldo negativo.';
    END IF;
END$$

DELIMITER ;

